# Build stage
FROM golang:1.20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy go mod and sum files
COPY api/go.mod api/go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY api/ ./

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o api-server ./cmd/main.go

# Run stage
FROM alpine:3.18

# Set working directory
WORKDIR /app

# Install necessary packages
RUN apk --no-cache add ca-certificates tzdata

# Set timezone
ENV TZ=UTC

# Create directories for uploads and results
RUN mkdir -p /app/uploads /app/results

# Copy binary from builder stage
COPY --from=builder /app/api-server .

# Expose port
EXPOSE 8080

# Command to run
CMD ["./api-server"] 